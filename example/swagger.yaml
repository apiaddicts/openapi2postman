openapi: 3.0.0
info:
  title: 'OAS API for Handball Spanish scoring '
  description: 'Sample REST APIs using Flask, OpenAPI and Connexion'
  version: 1.0.0
servers:
  - url: 'http://services.handbolsantquirze.cat'
    description: Rest Server showing Swagger and Connexion capability
paths:
  /club:
    get:
      operationId: club.getAll
      tags:
      - Club
      summary: Returns a list of clubs
      description: Returns a list of clubs.
      responses:
        '200':
          description: Return the entire list of regions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Club'
              examples:
                example-1:
                  value:
                    idClub: 0
                    Club: string
                    Address: string
                    Phone: string
                    Email: string
                    Web: string
                    Responsible: string
                    Logo: string
                    Region: 0
      parameters:
        - schema:
            type: string
            minLength: 0
            maxLength: 255
          in: query
          name: clubname
          description: ClubName
  '/club/{idClub}':
    get:
      operationId: club.get
      tags:
        - Club
      summary: Return a Club with given ID
      description: Return a Club  with given ID
      parameters:
        - name: idClub
          in: path
          description: Club ID
          required: true
          schema:
            type: integer
            format: int
      responses:
        '200':
          description: Return a Club with given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Club'
  '/club/region/{idRegion}':
    get:
      operationId: club.getIdRegion
      tags:
        - Club
      summary: Return a Club with given ID
      description: Return a Club  with given ID
      parameters:
        - name: idRegion
          in: path
          description: Region ID
          required: true
          schema:
            type: integer
            format: int
      responses:
        '200':
          description: Return a list of Clubs with given Region ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Club'
  /region:
    get:
      operationId: region.getAll
      tags:
        - Region
      summary: Returns a list of regions.
      description: Returns a list of regions.
      responses:
        '200':
          description: Return the entire list of regions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
    post:
      operationId: region.create
      tags:
        - Region
      summary: Create a new Region
      description: Create a new Region
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
      responses:
        '201':
          description: Region Created successfully
  '/team/club/{idClub}':
    get:
      operationId: team.getIdClub
      tags:
        - Team
      summary: Return a Team with given ID
      description: Return a Team  with given ID
      parameters:
        - name: idClub
          in: path
          description: Club ID
          required: true
          schema:
            type: integer
            format: int
      responses:
        '200':
          description: Return a Team with given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
  '/team/{idTeam}':
    get:
      operationId: team.get
      tags:
        - Team
      summary: Return a Team with given ID
      description: Return a Team  with given ID
      parameters:
        - name: idTeam
          in: path
          description: Team ID
          required: true
          schema:
            type: integer
            format: int
      responses:
        '200':
          description: Return a Team with given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
  /team:
    get:
      operationId: team.getAll
      tags:
        - Team
      summary: Returns a list of Teams.
      description: Returns a list of teams.
      responses:
        '200':
          description: Return the entire list of teams.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
    post:
      operationId: team.create
      tags:
        - Team
      summary: Create a new Team
      description: Create a new Team
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '201':
          description: Team Created successfully
    parameters: []
  '/region/{idRegion}':
    get:
      operationId: region.get
      tags:
        - Region
      summary: Return an Region with given ID
      description: Return an Region with given ID
      parameters:
        - name: idRegion
          in: path
          description: Region ID
          required: true
          schema:
            type: integer
            format: int
      responses:
        '200':
          description: Return an Region with given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
    put:
      operationId: region.update
      tags:
        - Region
      summary: Update an Region with given ID
      description: Update an Region with given ID
      parameters:
        - name: idRegion
          in: path
          description: Region ID
          required: true
          schema:
            type: integer
            format: int
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
      responses:
        '200':
          description: Updated an Region with given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
  '/scores':
    get:
      summary: Get seasson match score
      operationId: scores.getAll
      tags:
        - Scores
      parameters:
        - schema:
            type: string
          in: query
          name: idHomeTeam
          description: ID Home Team
          required: true
        - schema:
            type: string
          in: query
          name: idAwayTeam
          description: ID Away Team
          required: true
        - schema:
            type: string
          in: query
          name: season
          description: 'season'
      responses:
        '200':
          description: Return the entire list of scores for specific match.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scores'
components:
  schemas:
    #generate scores schema
    Scores:
      type: object
      properties:
        HomeTeam:
          type: object
          properties:
            id:
              type: integer
              format: int
            name:
              type: string
            logo:
              type: string
            score:
              type: integer
              format: int
        AwayTeam:
          type: object
          properties:
            id:
              type: integer
              format: int
            name:
              type: string
            logo:
              type: string
            score:
              type: integer
              format: int
        Date:
          type: string
        Stadium:
          type: string
        Seasson:
          type: string
        Round:
          type: string
        Group:
          type: string
        Status:
          type: string
        LocalTeamId:
          type: integer
          format: int
        AwayTeamId:
          type: integer
          format: int
        id:
          type: integer
          format: int
    Region:
      type: object
      properties:
        idRegion:
          type: integer
          format: int
        Region:
          type: string
      description: REGION MODEL
    Club:
      type: object
      properties:
        idClub:
          type: integer
          format: int
        Club:
          type: string
        Address:
          type: string
        Phone:
          type: string
        Email:
          type: string
        Web:
          type: string
        Responsible:
          type: string
        Logo:
          type: string
        Region:
          type: integer
          format: int
      description: CLUB MODEL
    Team:
      type: object
      properties:
        idTeam:
          type: integer
          format: int
        idClub:
          type: integer
          format: int
        idSeason:
          type: integer
          format: int
        idCategory:
          type: integer
          format: int
        idRegion:
          type: integer
          format: int
        Team:
          type: string
          format: int
      x-examples:
        example-1:
          idTeam: 0
          idClub: 0
          idSeason: 0
          idCategory: 0
          idRegion: 0
          Team: string
      description: 'TEAM MODEL '
